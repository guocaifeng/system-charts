alertmanager:
  enabled: true
  apiGroup: "monitoring.coreos.com"
  image:
    repository: dockerhub.cyai.com/rancher/prom-alertmanager
    tag: v0.17.0
  nodeSelectors: []
  resources:
    core:
      limits:
        memory: 500Mi
        cpu: 1000m
      requests:
        memory: 100Mi
        cpu: 100m
  config:
    global:
      resolve_timeout: 5m
    route:
      repeat_interval: 3h
      receiver: 'webhook'
    receivers:
      - name: 'webhook'
        webhook_configs:
          - url: 'http://webhook-svc-clusterip.cattle-prometheus:5000'
    inhibit_rules:
      - target_match:         # 被抑制的对象
          severity: Warning
        source_match:         # 当此告警发生，其他的告警被抑制
          severity: Critical
        equal: ['alertname']
  persistence:
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
    fsGroup: 2000

grafana:
  enabled: false
  level: cluster
  apiGroup: "monitoring.coreos.com"
  image:
    repository: dockerhub.cyai.com/rancher/grafana-grafana
    tag: 6.3.6
    tool:
      repository: dockerhub.cyai.com/rancher/prometheus-auth
      tag: v0.2.0
    proxy:
      repository: dockerhub.cyai.com/rancher/nginx
      tag: 1.17.4-alpine
  nodeSelectors: []
  resources:
    inits:
      limits:
        memory: 50Mi
        cpu: 50m
      requests:
        memory: 50Mi
        cpu: 50m
    core:
      limits:
        memory: 200Mi
        cpu: 200m
      requests:
        memory: 100Mi
        cpu: 100m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
  persistence:
    name: ""
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""
  prometheusDatasourceURL: "http://prometheus-operated:9090"

prometheus:
  enabled: false
  level: cluster
  auth:
    args:
    - --proxy-url=http://127.0.0.1:9090
    - --listen-address=$(POD_IP):9090
    - --filter-reader-labels=prometheus
    - --filter-reader-labels=prometheus_replica
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
  apiGroup: "monitoring.coreos.com"
  image:
    repository: dockerhub.cyai.com/rancher/prom-prometheus
    tag: v2.11.1
    auth:
      repository: dockerhub.cyai.com/rancher/prometheus-auth
      tag: v0.2.0
    proxy:
      repository: dockerhub.cyai.com/rancher/nginx
      tag: 1.17.4-alpine
  nodeSelectors: []
  resources:
    core:
      limits:
        memory: 500Mi
        cpu: 1000m
      requests:
        memory: 100Mi
        cpu: 100m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
    auth:
      limits:
        memory: 200Mi
        cpu: 500m
      requests:
        memory: 100Mi
        cpu: 100m
  persistence:
    name: ""
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  alertingEndpoints: []
  secrets: []
  ## Override the default generated ServiceAccount name
  ##
  serviceAccountNameOverride: ""
  ruleNamespaceSelector: {}
  ruleSelector:
    matchExpressions: []
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector:
    matchExpressions: []
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
    fsGroup: 2000
  sync:
    mode: "remote"
    path: "/api/v1/read"
    target: ""
  project:
    alertManagerTarget: ""
    projectDisplayName: ""
    clusterDisplayName: ""
  cluster:
    alertManagerNamespace: ""

operator:
  nameOverride: "prometheus-operator"
  enabledRBAC: true
  apiGroup: "monitoring.coreos.com"
  image:
    repository: dockerhub.cyai.com/rancher/coreos-prometheus-operator
    tag: v0.32.0
    prometheusConfigReloader:
      repository: dockerhub.cyai.com/rancher/coreos-prometheus-config-reloader
      tag: v0.32.0
    configmapReload:
      repository: dockerhub.cyai.com/rancher/coreos-configmap-reload
      tag: v0.0.1
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 50Mi
  nodeSelectors: []
  tolerations: []
  logFormat: "logfmt"
  logLevel: "info"
  manageCRDs: false
  withValidation: true
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""

exporter-coredns:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      scheme: http
      name: metrics
      port: 9153
      protocol: TCP
  serviceSelectorLabels:
    - "k8s-app=kube-dns"
  insecureSkipVerify: true

exporter-kube-controller-manager:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      scheme: http
      name: metrics
      port: 10252
      protocol: TCP
  serviceSelectorLabels:
  - "k8s-app=kube-controller-manager"
  insecureSkipVerify: true

exporter-kube-dns:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      dnsmasq:
        scheme: http
        name: dnsmasq-metrics
        port: 10054
        protocol: TCP
      skydns:
        scheme: http
        name: skydns-metrics
        port: 10055
        protocol: TCP
  serviceSelectorLabels:
  - "k8s-app=kube-dns"
  insecureSkipVerify: true

exporter-kube-etcd:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      scheme: https
      name: metrics
      port: 4001
      protocol: TCP
  serviceSelectorLabels:
  - "k8s-app=etcd-server"
  insecureSkipVerify: true
  caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  certFile: ""
  keyFile: ""

exporter-kube-scheduler:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      scheme: http
      name: http-metrics
      port: 10251
      protocol: TCP
  serviceSelectorLabels:
  - "component=kube-scheduler"
  insecureSkipVerify: true

exporter-kubelets:
  enabled: true
  apiGroup: "monitoring.coreos.com"
  serviceSelectorLabels:
  - "k8s-app=kubelet"
  insecureSkipVerify: true
  ## Set false when using GKE
  ##
  https: true

exporter-kubernetes:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  ports:
    metrics:
      scheme: https
      name: https
  serviceSelectorLabels:
  - "component=apiserver"
  - "provider=kubernetes"
  insecureSkipVerify: true

exporter-fluentd:
  enabled: true
  apiGroup: "monitoring.coreos.com"
  ports:
    metrics:
      scheme: http
      name: metric
  serviceSelectorLabels:
  - "app=fluentd"
  insecureSkipVerify: true

exporter-node:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  image:
    repository: dockerhub.cyai.com/rancher/prom-node-exporter
    tag: v0.17.0
  nodeSelectors: []
  resources:
    limits:
      cpu: 200m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 30Mi
  ports:
    metrics:
      port: 9100
  collectors: {}
  enabledHostNetwork: true
  enabledHostPID: true
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""

exporter-node-windows:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  nodeSelectors: []
  image:
    os: windows
    repository: rancher/wmi_exporter-package
    tag: v0.0.3
  resources: {}
  ports:
    metrics:
      name: windows-metrics
      scheme: https
      port: 9796
      protocol: TCP

exporter-kube-state:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  image:
    repository: dockerhub.cyai.com/rancher/coreos-kube-state-metrics
    tag: v1.8.0
  nodeSelectors: []
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 130Mi
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""
  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    fsGroup: 65534

global:
  systemDefaultRegistry: ""
  clusterName: ""
  projectName: ""
  installCRDs: true

operator-init:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  image:
    repository: dockerhub.cyai.com/rancher/istio-kubectl
    tag: 1.1.5
  resources:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 20m
      memory: 20Mi
